things needed for Labs to work.



---------------------------------------------------------------------------------------
need powershell script to install windows failover cluster feature

dism /online /enable-feature /featurename:FailoverCluster-Core 
dism /online /enable-feature /featurename:FailoverCluster-Core-WOW64

---------------------------------------------------------------------------------
Script to create a single node failover cluster instance
Test-Cluster –Node server1.domain.local

New-Cluster –Name server1 –Node server1.domain.local –StaticAddress xxx.xxx.xxx.xxx -NoStorage

 


-------------------------------------------------------------------------------

need firewall rule script

New-NetFirewallRule -DisplayName "Allow TCP port 5022 inbound" -Direction inbound -Profile Any -Action Allow -Localport 5022 -Protocol TCP 
New-NetFirewallRule -DisplayName "Allow TCP port 5022 outbound" -Direction outbound -Profile Any -Action Allow -Localport 5022 -Protocol TCP 

New-NetFirewallRule -DisplayName "Allow TCP port 1433 inbound" -Direction inbound -Profile Any -Action Allow -Localport 1433 -Protocol TCP 
New-NetFirewallRule -DisplayName "Allow TCP port 1433 outbound" -Direction outbound -Profile Any -Action Allow -Localport 1433 -Protocol TCP 



------------------------------------------------------------------------------------
#Script to download adventureworks database bak and then restore it to server

# Define the URL of the file to be downloaded
$url = "https://github.com/Microsoft/sql-server-samples/releases/download/adventureworks/AdventureWorks2019.bak"

# Define the destination path where the file will be saved
$destinationPath = "C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup\\AdventureWorks2019.bak"

# Use Invoke-WebRequest to download the file
Invoke-WebRequest -Uri $url -OutFile $destinationPath

# Print a success message
Write-Host "File downloaded successfully to $destinationPath"

#restore database

# Define the SQL Server instance and database
$serverInstance = "techconnectwin2"
$database = "master"

# Define the PowerShell variable containing the SQL command
$restorecmd = "USE [master]
RESTORE DATABASE [AdventureWorks2019_xxx] FROM  DISK = N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\Backup\AdventureWorks2019.bak' WITH  FILE = 1,  MOVE N'AdventureWorks2019' TO N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\AdventureWorks2019.mdf',  MOVE N'AdventureWorks2019_log' TO N'C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\AdventureWorks2019_log.ldf',  NOUNLOAD,  STATS = 5"



# Use Invoke-Sqlcmd to execute the command
Invoke-Sqlcmd -ServerInstance $serverInstance -Database $database -Query $restorecmd

# Print a success message
Write-Host "Command executed successfully"



































